-- Set key combos
local mash = {"alt", "cmd", "ctrl"}
local hyper = {"alt", "cmd", "ctrl", "shift"}

-- Reload init.lua automatically on config changes
function reloadConfig(files)
  doReload = false
  for _,file in pairs(files) do
    if file:sub(-4) == ".lua" then
      doReload = true
    end
  end
  if doReload then
    hs.reload()
  end
end

hs.pathwatcher.new(os.getenv("HOME") .. "/dotfiles/hammerspoon/init.lua", reloadConfig):start()
hs.notify.new({title="Hammerspoon", informativeText="Why a spoon, cousin? Why not an axe?"}):send()

-- Delicious coffee for Mac (aka Caffeine app)
local caffeine = hs.menubar.new()
function setCaffeineDisplay(state)
  if state then
    caffeine:setIcon("caffeine-on.pdf")
    caffeine:setTooltip("Computer currently prevented from going to sleep")
  else
    caffeine:setIcon("caffeine-off.pdf")
    caffeine:setTooltip("Computer currently allowed to go to sleep")
  end
end

function caffeineClicked()
  setCaffeineDisplay(hs.caffeinate.toggle("displayIdle"))
end

if caffeine then
  caffeine:setClickCallback(caffeineClicked)
  setCaffeineDisplay(hs.caffeinate.get("displayIdle"))
end

caffeineClicked()

-- Switching windows through hints
hs.hotkey.bind(hyper, "\\", function()
  hs.hints.windowHints()
end)

-- disable animations
hs.window.animationDuration = 0

--------------------------
-- Application Launcher --
--------------------------
hs.hotkey.bind(hyper, "Right", function()
  hs.window.focusedWindow():moveOneScreenEast()
end)

hs.hotkey.bind(hyper, "Left", function()
  hs.window.focusedWindow():moveOneScreenWest()
end)

hs.hotkey.bind(hyper, "space", function()
  hs.application.launchOrFocus("Visual Studio Code")
end)

hs.hotkey.bind(hyper, "a", function()
  hs.application.launchOrFocus("Calendar")
end)

hs.hotkey.bind(hyper, "b", function()
  hs.application.launchOrFocus("Firefox")
end)

hs.hotkey.bind(hyper, "c", function()
  hs.application.launchOrFocus("Google Chrome")
end)

hs.hotkey.bind(hyper, "d", function()
  hs.application.launchOrFocus("DevDocs")
end)

hs.hotkey.bind(hyper, "e", function()
  hs.application.launchOrFocus("Airmail")
end)

hs.hotkey.bind(hyper, "f", function()
  hs.application.launchOrFocus("Finder")
end)

hs.hotkey.bind(hyper, "g", function()
  hs.application.launchOrFocus("Steam")
end)

hs.hotkey.bind(hyper, "m", function()
  hs.application.launchOrFocus("Marked 2")
end)

hs.hotkey.bind(hyper, "n", function()
  --keep = hs.appfinder.windowFromWindowTitle("Google Keep")
  --keep:focus()
  hs.application.launchOrFocus("nvALT")
end)

hs.hotkey.bind(hyper, "p", function()
  hs.application.launchOrFocus("Preview")
  -- postman = hs.appfinder.windowFromWindowTitle("Postman")
  -- postman:focus()
end)

hs.hotkey.bind(hyper, "r", function()
  hs.application.launchOrFocus("iBooks")
end)

hs.hotkey.bind(hyper, "s", function()
  hs.application.launchOrFocus("Safari")
end)

hs.hotkey.bind(hyper, "t", function()
  hs.application.launchOrFocus("Sublime Text")
end)

hs.hotkey.bind(hyper, "v", function()
 hs.application.launchOrFocus("Visual Studio Code")
end)

hs.hotkey.bind(hyper, "w", function()
  hs.application.launchOrFocus("Twitter")
end)

hs.hotkey.bind(hyper, "x", function()
  hs.application.launchOrFocus("Xcode")
end)

--hs.hotkey.bind(hyper, "up", function()
  --local currentWindow = hs.window.focusedWindow()
  --hs.application.launchOrFocus("Firefox")
  --hs.eventtap.keyStroke({"ctrl"}, "u")
  --hs.window.focus(currentWindow)
--end)

--hs.hotkey.bind(hyper, "down", function()
  --local currentWindow = hs.window.focusedWindow()
  --hs.application.launchOrFocus("Firefox")
  --hs.eventtap.keyStroke({"ctrl"}, "d")
  --hs.window.focus(currentWindow)
--end)

--hs.hotkey.bind(hyper, "right", function()
  --local currentWindow = hs.window.focusedWindow()
  --hs.application.launchOrFocus("Firefox")
  --hs.eventtap.keyStroke({}, "]")
  --hs.eventtap.keyStroke({}, "]")
  --hs.window.focus(currentWindow)
--end)

--hs.hotkey.bind(hyper, "left", function()
  --local currentWindow = hs.window.focusedWindow()
  --hs.application.launchOrFocus("Firefox")
  --hs.eventtap.keyStroke({}, "[")
  --hs.eventtap.keyStroke({}, "[")
  --hs.window.focus(currentWindow)
--end)

-------------------------
-- Window Management --
-----------------------

-- 50% width, left
hs.hotkey.bind(hyper, "j", function()
  local win = hs.window.focusedWindow()
  local f = win:frame()
  local screen = win:screen()
  local max = screen:frame()

  f.x = max.x
  f.y = max.y
  f.w = max.w / 2
  f.h = max.h
  win:setFrame(f)
end)

-- 50% width, right
hs.hotkey.bind(hyper, "l", function()
  local win = hs.window.focusedWindow()
  local f = win:frame()
  local screen = win:screen()
  local max = screen:frame()

  f.x = max.x + (max.w / 2)
  f.y = max.y
  f.w = max.w / 2
  f.h = max.h
  win:setFrame(f)
end)

-----

-- 1/3 width, left
hs.hotkey.bind(hyper, "7", function()
  local win = hs.window.focusedWindow()
  local f = win:frame()
  local screen = win:screen()
  local max = screen:frame()

  f.x = max.x
  f.y = max.y
  f.w = max.w / 3
  f.h = max.h
  win:setFrame(f)
end)

-- 1/3 width, center
hs.hotkey.bind(hyper, "8", function()
  local win = hs.window.focusedWindow()
  local f = win:frame()
  local screen = win:screen()
  local max = screen:frame()

  f.x = max.x + (max.w / 3)
  f.y = max.y
  f.w = max.w / 3
  f.h = max.h
  win:setFrame(f)
end)

-- 1/3 width, right
hs.hotkey.bind(hyper, "9", function()
  local win = hs.window.focusedWindow()
  local f = win:frame()
  local screen = win:screen()
  local max = screen:frame()

  f.x = max.x + (max.w * (2 / 3))
  f.y = max.y
  f.w = max.w / 3
  f.h = max.h
  win:setFrame(f)
end)

-----

-- 2/3 width, left half
hs.hotkey.bind(hyper, "u", function()
  local win = hs.window.focusedWindow()
  local f = win:frame()
  local screen = win:screen()
  local max = screen:frame()

  f.x = max.x
  f.y = max.y
  f.w = max.w * (2 / 3)
  f.h = max.h
  win:setFrame(f)
end)

-- 2/3 width, right half
hs.hotkey.bind(hyper, "o", function()
  local win = hs.window.focusedWindow()
  local f = win:frame()
  local screen = win:screen()
  local max = screen:frame()

  f.x = max.x + (max.w / 3)
  f.y = max.y
  f.w = max.w * (2/3)
  f.h = max.h
  win:setFrame(f)
end)

-- 2/3 width, centered
hs.hotkey.bind(hyper, "i", function()
  local win = hs.window.focusedWindow()
  local f = win:frame()
  local screen = win:screen()
  local max = screen:frame()

  f.x = max.x + (max.w / 6)
  f.y = max.y
  f.w = max.w * (2/3)
  f.h = max.h
  win:setFrame(f)
end)
-----

-- 100% width
hs.hotkey.bind(hyper, "k", function()
  local win = hs.window.focusedWindow()
  local f = win:frame()
  local screen = win:screen()
  local max = screen:frame()

  f.x = max.x
  f.y = max.y
  f.w = max.w
  f.h = max.h
  win:setFrame(f)
end)

-- 2/3 height, top
hs.hotkey.bind(hyper, "1", function()
  local win = hs.window.focusedWindow()
  local f = win:frame()
  local screen = win:screen()
  local max = screen:frame()

  f.x = max.x
  f.y = max.y
  f.w = max.w
  f.h = max.h * (2/3)
  win:setFrame(f)
end)

-- 1/3 height, bottom
hs.hotkey.bind(hyper, "2", function()
  local win = hs.window.focusedWindow()
  local f = win:frame()
  local screen = win:screen()
  local max = screen:frame()

  f.x = max.x
  f.y = max.y + (max.h - (max.h / 3))
  f.w = max.w
  f.h = max.h * (1/3)
  win:setFrame(f)
end)
